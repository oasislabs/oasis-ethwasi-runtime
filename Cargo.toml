[package]
name = "oasis-ethwasi-runtime"
version = "0.3.0"
authors = ["Oasis Labs Inc. <info@oasislabs.com>"]
edition = "2018"

[package.metadata.fortanix-sgx]
heap-size = 134217728
stack-size = 2097152
threads = 2

[[bin]]
name = "oasis-ethwasi-runtime"
path ="bin/main.rs"

[dependencies]
# Internal.
oasis-ethwasi-runtime-api = { path = "./api" }
oasis-ethwasi-runtime-common = { path = "./common" }
oasis-ethwasi-runtime-keymanager = { path = "./keymanager-runtime" }

# Oasis core.
oasis-core-keymanager-client = { git = "https://github.com/oasisprotocol/oasis-core", tag = "v20.12.3" }
oasis-core-runtime = { git = "https://github.com/oasisprotocol/oasis-core", tag = "v20.12.3" }

# Parity.
common-types = { git = "https://github.com/oasislabs/oasis-parity", branch = "use-parity-ws" }
ethcore = { git = "https://github.com/oasislabs/oasis-parity", branch = "use-parity-ws" }
ethkey = { git = "https://github.com/oasislabs/oasis-parity", branch = "use-parity-ws" }
hashdb = { git = "https://github.com/oasislabs/oasis-parity", branch = "use-parity-ws" }
keccak-hash = { git = "https://github.com/oasislabs/oasis-parity", branch = "use-parity-ws" }
ethereum-types = { version = "0.3", default-features = false, features = ["std", "serialize"] }

# Others.
anyhow = "1.0"
byteorder = "1.0"
elastic-array = "0.10"
hex = "0.3"
io-context = "0.2.0"
log = "0.4"
serde_bytes = "0.11"
serde_json = "1.0"
sha3 = "0.6"
slog = "2.4.1"
thiserror = "1.0"

[build-dependencies]
oasis-core-tools = { git = "https://github.com/oasisprotocol/oasis-core", tag = "v20.12.3" }

[dev-dependencies]
assert_matches = "1.3.0"
time = "0.1"
ethabi = "8.0.0"

[features]
default = ["confidential"]
prefetch = []
confidential = []
# Use test feature flag since Rust doesn't support conditional compilation using
# cfg(test) on dependent crates.
test = ["oasis-ethwasi-runtime-common/test"]
benchmarking = ["oasis-ethwasi-runtime-common/benchmarking"]
production-genesis = ["oasis-ethwasi-runtime-common/production-genesis"]

[profile.release]
panic = "abort"
opt-level = 3
lto = true

[patch.crates-io]
# TODO: Remove when merged upstream (briansmith/ring#738).
ring = { git = "https://github.com/oasislabs/ring-sgx", branch = "sgx-target" }
# TODO: Remove when merged upstream (rust-lang-deprecated/rustc-serialize#195).
rustc-serialize = { git = "https://github.com/jethrogb/rustc-serialize", branch = "portability" }
# NOTE: Required because heapsize doesn't work on SGX due to a different allocator.
heapsize = { git = "https://github.com/oasislabs/heapsize", branch = "sgx-target" }

[workspace]
members = [
    "api",
    "common",
    "gateway",
    "genesis",
    "keymanager-runtime",
]
exclude = ["tests"]
