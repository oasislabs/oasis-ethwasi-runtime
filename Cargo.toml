[package]
name = "runtime-ethereum"
version = "0.1.0"
authors = ["Oasis Labs Inc. <info@oasislabs.com>"]
build = "build.rs"

[dependencies]
runtime-ethereum-common = { path = "./common" }
common-types = { git = "https://github.com/oasislabs/parity", branch = "ekiden" }
ekiden-common = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-core = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-keymanager-client = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-keymanager-common = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-enclave-common = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-trusted = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-storage-base = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-storage-dummy = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-storage-lru = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ethcore = { git = "https://github.com/oasislabs/parity", branch = "ekiden" }
ethereum-types = { git = "https://github.com/oasislabs/primitives", branch = "ekiden" }
ethkey = { git = "https://github.com/oasislabs/parity", branch = "ekiden" }
ethereum-api = { path = "./api" }
keccak-hash = { git = "https://github.com/oasislabs/parity", branch = "ekiden" }
hashdb = { git = "https://github.com/oasislabs/parity", branch = "ekiden" }
hex = "0.3"
lazy_static = "1.0.1"
log = "0.4"
protobuf = "~2.0"
sha3 = "0.6"
sodalite = "0.3.0"
elastic-array = "0.10"
ekiden-roothash-base = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }

[build-dependencies]
ekiden-edl = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }
ekiden-tools = { git = "https://github.com/oasislabs/ekiden", branch = "armani/km_cleanup" }

[features]
default = ["confidential"]
confidential = []
benchmark = []
# Use test feature flag since Rust doesn't support conditional compilation using
# cfg(test) on dependent crates.
test = ["runtime-ethereum-common/test"]

[profile.release]
panic = "abort"

# temporary fix for incompatibility between jsonrpc and ws-rs
[patch."https://github.com/tomusdrw/ws-rs"]
ws = { git = "https://github.com/oasislabs/ws-rs", branch = "ekiden" }

[patch.crates-io]
ring = { git = "https://github.com/oasislabs/ring", branch = "0.14.0-ekiden" }

[workspace]
members = [
    "api",
    "common",
    "gateway",
    "genesis",
]
