syntax = "proto3";

package api;

message InitStateRequest {
}

message InitStateResponse {
}

message InjectAccountsResponse {
}


// An unsigned transaction.
message Transaction {
    bool use_nonce = 1;
    // The nonce from web3. It's a monotonic counter per account.
    string nonce = 2;               // (dec) optional
    // The "from" addr.
    string caller = 3;              // (hex)
    // True if it's a call to a contract, with a "to" addr. If it's not a call, it's a "create."
    bool is_call = 4;
    // The "to" addr for a call to a contractx.
    string address = 5;             // (hex) defined if is_call = true
    // Opaque call input.
    string input = 6;               // (hex)
    string value = 7;               // (hex)
}

message ExecuteTransactionRequest {
    Transaction transaction = 1;
}

message ExecuteRawTransactionRequest {
    // A signed transaction (using Ethereum's own format).
    string data = 1;                // (hex)
}

message Log {
    // TODO: add logs from VM
}

message ExecuteTransactionResponse {
    string request = 1;
    Log log = 2;
    string used_gas = 3;            // (hex)
    bool status = 4;                // ExitedOk => true
    string result = 5;              // (hex)
    string hash = 6;                // (hex) returned by sendTransaction and sendRawTransaction
}
