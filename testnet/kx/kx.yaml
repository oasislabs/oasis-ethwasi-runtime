# `copper` is chosen as a random word for use as a key for labels that
# aren't naturally structured as key-value pairs.

kind: Service
apiVersion: v1
metadata:
  name: evm-node-dummy
spec:
  ports:
    - name: dummy-grpc
      port: 42261
  selector:
    copper: evm-node-dummy
  # type: ClusterIP
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: evm-node-dummy
  labels:
    app: ekiden
spec:
  selector:
    matchLabels:
      copper: evm-node-dummy
  # replicas: 1
  template:
    metadata:
      labels:
        copper: evm-node-dummy
        app: ekiden
    spec:
      containers:
        - name: ekiden-node-dummy
          image: docker.io/oasislabs/ekiden-contract-evm:latest
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret
          command:
            - ekiden-node-dummy
          args:
            - --time-source
            - mock
            - --mock-epoch-interval
            - "600"
            - --storage-backend
            - dynamodb
            - --storage-dynamodb-region
            - us-west-2
            - --storage-dynamodb-table-name
            - kx-evm
---
kind: Service
apiVersion: v1
metadata:
  name: evm
spec:
  ports:
    - name: contract-grpc
      port: 9001
  selector:
    copper: evm
  # Change this to make the network public.
  # type: ClusterIP
---
# Should we go stateful and save the identity?
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: evm
  labels:
    app: ekiden
spec:
  selector:
    matchLabels:
      copper: evm
  replicas: 24
  template:
    metadata:
      labels:
        copper: evm
        app: ekiden
    spec:
      containers:
        - name: ekiden-compute
          image: docker.io/oasislabs/ekiden-contract-evm:latest
          env:
            - name: LD_LIBRARY_PATH
              value: /opt/intel/sgxsdk/lib64
          command:
            - ekiden-compute
          args:
            - --no-persist-identity
            - --max-batch-timeout
            - "10"
            - --time-source-notifier
            - "system"
            - --entity-ethereum-address
            - "0000000000000000000000000000000000000000"
            - --metrics-addr
            - "0.0.0.0:3000"
            - --consensus-client-host
            - $(EVM_NODE_DUMMY_SERVICE_HOST)
            - --consensus-client-port
            - $(EVM_NODE_DUMMY_SERVICE_PORT_DUMMY_GRPC)
            - --contract-registry-client-host
            - $(EVM_NODE_DUMMY_SERVICE_HOST)
            - --contract-registry-client-port
            - $(EVM_NODE_DUMMY_SERVICE_PORT_DUMMY_GRPC)
            - --entity-registry-client-host
            - $(EVM_NODE_DUMMY_SERVICE_HOST)
            - --entity-registry-client-port
            - $(EVM_NODE_DUMMY_SERVICE_PORT_DUMMY_GRPC)
            - --scheduler-client-host
            - $(EVM_NODE_DUMMY_SERVICE_HOST)
            - --scheduler-client-port
            - $(EVM_NODE_DUMMY_SERVICE_PORT_DUMMY_GRPC)
            - --storage-client-host
            - $(EVM_NODE_DUMMY_SERVICE_HOST)
            - --storage-client-port
            - $(EVM_NODE_DUMMY_SERVICE_PORT_DUMMY_GRPC)
            - ekiden/lib/evm.so

---
kind: Service
apiVersion: v1
metadata:
  name: web3-client
spec:
  ports:
    - name: web3
      port: 8545
      nodePort: 8545
  selector:
    copper: web3-client
  type: NodePort
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: web3-client
spec:
  selector:
    matchLabels:
      copper: web3-client
  template:
    metadata:
      labels:
        copper: web3-client
    spec:
      containers:
        - name: web3-client
          image: docker.io/oasislabs/ekiden-contract-evm:latest
          command:
            - sh
          args:
            - -c
            - >-
              exec web3-client
              --entity-registry-client-host $(EVM_NODE_DUMMY_SERVICE_HOST)
              --entity-registry-client-port $(EVM_NODE_DUMMY_SERVICE_PORT_DUMMY_GRPC)
              --scheduler-client-host $(EVM_NODE_DUMMY_SERVICE_HOST)
              --scheduler-client-port $(EVM_NODE_DUMMY_SERVICE_PORT_DUMMY_GRPC)
              --mr-enclave $$(cat ekiden/res/evm.mrenclave)
