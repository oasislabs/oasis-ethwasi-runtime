################
# Build pipeline
################
docker_plugin: &docker_plugin_configuration
  oasislabs/docker#v2.1.0-oasis4:
    image: "oasislabs/testing:0.2.0"
    always_pull: true
    workdir: /workdir
    volumes:
      - .:/workdir
      - /var/lib/buildkite-agent/.ssh:/root/.ssh
      - /var/lib/buildkite-agent/.coveralls:/root/.coveralls
      - /var/lib/buildkite-agent/.circleci:/root/.circleci
      - /var/lib/buildkite-agent/.buildkite:/root/.buildkite
      # Shared Rust artifacts cache.
      - /tmp/cargo_cache:/cargo_cache
      # Shared Rust package checkouts directory.
      - /tmp/cargo_pkg/git:/root/.cargo/git
      - /tmp/cargo_pkg/registry:/root/.cargo/registry
      # Shared Rust SGX standard library artifacts cache.
      - /tmp/xargo_cache:/root/.xargo
      # Shared Go package checkouts directory.
      - /tmp/go_pkg:/root/go/pkg
    environment:
      - "LC_ALL=C.UTF-8"
      - "LANG=C.UTF-8"
      - "CARGO_TARGET_DIR=/tmp/artifacts"
      - "CARGO_INCREMENTAL=/cargo_cache"
      - "CARGO_INSTALL_ROOT=/root/.cargo"
      - "EKIDEN_BRANCH=master"
      - "E2E_TESTS_BRANCH=beta"
    propagate-environment: true
    unconfined: true

steps:

  - label: Build genesis
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/build_generic.sh /workdir -p genesis
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build web3 gateway
    command:
      - .buildkite/scripts/setup_gitconfig.sh

      # Build code and run tests
      - .buildkite/rust/build_generic.sh /workdir -p web3-gateway -Z unstable-options

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /tmp/artifacts/debug
      - buildkite-agent artifact upload gateway
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build runtime
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/build_runtime.sh /workdir

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /tmp/artifacts/enclave
      - buildkite-agent artifact upload runtime-ethereum.so
      - buildkite-agent artifact upload runtime-ethereum.mrenclave
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  # Wait for all jobs defined before this point
  # to finish running in parallel before continuing.
  - wait

  - label: Cargo tests
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/test_runtime_and_gateway.sh /workdir
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Code coverage
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/code_coverage.sh

      # Save the report as a build artifact
      # so it can be easily accessed for debugging.
      - buildkite-agent artifact upload cobertura.xml
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  # TODO: figure out a way to start running the
  #       end-to-end tests as soon as its dependencies
  #       are done running. Don't wait for all other
  #       parallel jobs to finish, just the ones we need
  #       to run the tests...

    # End-to-end tests
  - label: RPC tests
    command:
      - .buildkite/scripts/download_common_artifacts.sh
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/run_rpc_test.sh
    timeout_in_minutes: 20
    # use default: exit-status: "*" and retry limit of 2
    retry:
      automatic: true
    plugins:
      <<: *docker_plugin_configuration

  - label: End-to-end tests
    command:
      - .buildkite/scripts/download_common_artifacts.sh
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/run_end_to_end_test.sh
    timeout_in_minutes: 25
    # use default: exit-status: "*" and retry limit of 2
    retry:
      automatic: true
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration


  # ENS tests temporarily disabled due to flakiness (#349)
  #- label: ENS tests
  #  command:
  #    - .buildkite/scripts/download_common_artifacts.sh
  #    - .buildkite/scripts/setup_gitconfig.sh
  #    - .buildkite/scripts/run_dapp_test.sh ens
  #  plugins:
  #    <<: *docker_plugin_configuration

  - label: Celer tests
    command:
      - .buildkite/scripts/download_common_artifacts.sh
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/scripts/run_dapp_test.sh celer
    timeout_in_minutes: 45
    # use default: exit-status: "*" and retry limit of 2
    retry:
      automatic: true
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Augur tests
    command:
      - .buildkite/scripts/download_common_artifacts.sh
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/scripts/run_dapp_test.sh augur
    timeout_in_minutes: 20
    # use default: exit-status: "*" and retry limit of 2
    retry:
      automatic: true
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - wait

  - label: ":rocket: Deploy"
    trigger: runtime-ethereum-deploy-to-staging
    async: true
    branches: "master beta"
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
